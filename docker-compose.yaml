services:
  backend:
    image: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: 
      - ./backend/.env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal
  # redis:
  #   condition: service_healthy


  processor:
    image: processor
    build:
      context: ./processor
      dockerfile: Dockerfile
    env_file: 
      - ./processor/.env
    ports:
      - 8080:8080
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal
    
  db:
    image: postgres:17-alpine3.22
    ports:
      - "5432:5432"
    env_file: 
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${DB_USER} -d $${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - internal

# redis:
#   image: redis:alpine3.21
#   restart: always
#   ports:
#     - "6379:6379"
#   volumes:
#     - redis-data:/data
#   healthcheck:
#     test: [ "CMD-SHELL", "redis-cli ping" ]
#     interval: 10s
#     timeout: 5s
#     retries: 5
#   environment:
#     - ALLOW_EMPTY_PASSWORD=yes

networks:
  internal:
    driver: bridge
volumes:
  db-data:
  # redis-data:
