services:
  backend:
    image: video_upscaling_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: 
      - ./.env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    # redis:
    #   condition: service_healthy
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}

  video_processor:
    image: video_processor
    build:
      context: ./video_processor
    env_file: 
      - ./.env
    ports:
      - 8080:8080
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    environment:
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
    depends_on:
      db:
        condition: service_healthy
    

  # frontend:
  #   build: ./frontend
  #   ports: 
  #     - "4173:4173"

  db:
    image: postgres:17-alpine3.22
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

# redis:
#   image: redis:alpine3.21
#   restart: always
#   ports:
#     - "6379:6379"
#   volumes:
#     - redis-data:/data
#   healthcheck:
#     test: [ "CMD-SHELL", "redis-cli ping" ]
#     interval: 10s
#     timeout: 5s
#     retries: 5
#   environment:
#     - ALLOW_EMPTY_PASSWORD=yes

volumes:
  db-data:
  # redis-data:
