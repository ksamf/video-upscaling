services:
  backend:
    image: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: 
      - ./backend/.env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy

  processor:
    image: processor
    build:
      context: ./processor
      dockerfile: Dockerfile
    env_file: 
      - ./processor/.env
    ports:
      - 8080:8080
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all

  
  db:
    image: postgres:17-alpine3.22
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]      
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data


  redis:
    image: redis:alpine3.22
    restart: always
    ports:
      - "6379:6379"
    env_file: 
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data


  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    env_file:
      - ./.env
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --list --bootstrap-server localhost:9092 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3


  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  redis-data:
